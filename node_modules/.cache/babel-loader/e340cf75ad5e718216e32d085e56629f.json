{"ast":null,"code":"var _jsxFileName = \"/Users/anand/Desktop/Cerebro/frontend/react-app/src/components/DbConnect.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../styles/DbConnect.css';\nconst DbConnect = () => {\n  const [engine, setEngine] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [host, setHost] = useState('');\n  const [port, setPort] = useState('');\n  const [database, setDatabase] = useState('');\n  const [driver, setDriver] = useState('');\n  const [encrypt, setEncrypt] = useState('');\n  const [trustServerCertificate, setTrustServerCertificate] = useState('');\n  const isFormValid = () => {\n    // Add your form validation logic here\n  };\n  useEffect(() => {\n    // Add logic that needs to run when 'engine' changes\n  }, [engine]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Add your submit logic here\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"CEREBRO\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"dbConnectForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\nexport default DbConnect;","map":{"version":3,"names":["React","useState","useEffect","DbConnect","engine","setEngine","username","setUsername","password","setPassword","host","setHost","port","setPort","database","setDatabase","driver","setDriver","encrypt","setEncrypt","trustServerCertificate","setTrustServerCertificate","isFormValid","handleSubmit","event","preventDefault","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onSubmit"],"sources":["/Users/anand/Desktop/Cerebro/frontend/react-app/src/components/DbConnect.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport '../styles/DbConnect.css';\n\nconst DbConnect = () => {\n  const [engine, setEngine] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [host, setHost] = useState('');\n  const [port, setPort] = useState('');\n  const [database, setDatabase] = useState('');\n  const [driver, setDriver] = useState('');\n  const [encrypt, setEncrypt] = useState('');\n  const [trustServerCertificate, setTrustServerCertificate] = useState('');\n\n  const isFormValid = () => {\n    // Add your form validation logic here\n  };\n\n  useEffect(() => {\n    // Add logic that needs to run when 'engine' changes\n  }, [engine]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Add your submit logic here\n  };\n\n  return (\n    <div>\n      <div className=\"header\">\n        <h1>CEREBRO</h1>\n      </div>\n      <div className=\"container\">\n        <form id=\"dbConnectForm\" onSubmit={handleSubmit}>\n          {/* Form fields */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default DbConnect;\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,yBAAyB;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAExE,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxB;EAAA,CACD;EAEDpB,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,CAACE,MAAM,CAAC,CAAC;EAEZ,MAAMmB,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;EACF,CAAC;EAED,oBACEzB,KAAA,CAAA0B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEhC,KAAA,CAAA0B,aAAA;IAAKO,SAAS,EAAC,QAAQ;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBhC,KAAA,CAAA0B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,SAAW,CACZ,CAAC,eACNhC,KAAA,CAAA0B,aAAA;IAAKO,SAAS,EAAC,WAAW;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBhC,KAAA,CAAA0B,aAAA;IAAMQ,EAAE,EAAC,eAAe;IAACC,QAAQ,EAAEZ,YAAa;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAE1C,CACH,CACF,CAAC;AAEV,CAAC;AAED,eAAe7B,SAAS"},"metadata":{},"sourceType":"module"}